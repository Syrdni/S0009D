#version 430
layout(location=0) in vec3 pos;
layout(location = 1) in vec2 aTexCoord;
layout(location = 2) in vec3 aNormal;

uniform mat4 transform;
uniform mat4 modelMatrix;

//Used for lighting
uniform vec4 lightPosition;
uniform vec4 lightColor;
uniform vec4 cameraPosition;

out vec2 TexCoord;
out vec3 Normal;
out vec3 Pos;

//Lighting
out vec4 LightPosition;
out vec4 LightColor;
out vec4 CameraPosition;

void main()
{
	gl_Position = vec4(pos, 1.0f);
	TexCoord = aTexCoord;
   	Normal = mat3(transpose(inverse(modelMatrix))) * aNormal;
	Pos = (modelMatrix * vec4(pos, 1.0f)).xyz;
	
	LightPosition = lightPosition;
	LightColor = lightColor;
	CameraPosition = cameraPosition;
	
}